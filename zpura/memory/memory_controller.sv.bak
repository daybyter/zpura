// Memory bus for the zpura project
module memory_controller(
	input rst,
	input clk,
	input [31:2] mem_adr,  // Address of the 32 bit mem dword
	inout [31:0] data,
	input wren,	// Write enable
	input	rden; // Read enable
	output reg busy, // Memory transfer in progress
	output reg rdy); // Memory transfer complete
	
	
PARAM CPURAMSIZE=1024*1024;  // 1 mio 32 bit words = 4 MB
PARAM BOOTROMSIZE = 1024;  // 4 KB bootrom

// Flag to check, if an address in in the RAM area
wire isInCPURAM;
assign isInCPURAM = mem_adr < CPURAMSIZE;

// Flag to check, if an address is in the boot ROM
wire isInBOOTROM;
assign isInBOOTROM = (mem_adr >= CPURAMSIZE) && (mem_adr > (CPURAMSIZE + BOOTROMSIZE));

// The various memory types
rom2 bootRom(mem_adr,clk,databus);  // Boot ROM
reg loword;  // Flag for high or lo-word, since sdram is 16-bit
reg sdbusy;
sdram_controller sdram({mem_adr,loword},data,wren,
{mem_adr,loword},data,rden,
sdbuy,rst,clk);

always @(posedge clk) begin
	if(~rst) begin
		busy <= 1'b0;
		rdy <= 1'b1;
	end else begin
		if(~busy) begin
			
		end
	end
end

endmodule